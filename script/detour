#!perl

use Getopt::Long;
use WordNet::QueryData;
use WordNet::Similarity::path;
use FrameNet::WordNet::Detour;
use Pod::Usage;
use Storable;

# one result by default
my $number_results = 1;
my $weights = 0;
my $fees = 0;
my $list = 0;
my $cached = 1;
my $limited = 0;
my $wnhome = $ENV{'WNHOME'};
my $fnhome = $ENV{'FNHOME'};
GetOptions ('weights' => \$weights, 
	    'v' => \$verbose, 
	    'vv' => \$vverbose,
	    'd' => \$distance, 
	    'e|f' => \$fees, 
	    'limited!' => \$limited,
	    'cache!' => \$cached,
	    'wn=s' => \$wnhome,
	    'fn=s' => \$fnhome,
	    'help|?' => \$help,
	    'n=i' =>\$number_results);

my $detour = FrameNet::WordNet::Detour->new($wnhome,$fnhome);

pod2usage(1) if ($help);

sub printresult {
  $result = shift;
  print $result->get_query."\n" if ($list);
  my $rhash = $result->get_best_frames($number_results);
  foreach $frame (@$rhash) {
    print $frame->get_name;
    print " ".$frame->get_weight(1) if ($weights);
    print " (".join(',',@{$frame->get_fees}).")" if ($fees);
    print "; ";
  };
  print "\n";
};


my $query = shift;

$detour->unlimited;
$detour->uncached;
$detour->limited if ($limited);
$detour->set_verbose if ($verbose);
$detour->set_debug if ($vverbose);
$detour->cached if ($cached);


my $result = $detour->query($query);

if ((ref $result) eq "FrameNet::WordNet::Detour::Data") {
  printresult($result);
} else {
  foreach $res (@$result) {
    $list = 1;
    printresult($res);
    print "\n";
  }
}


__END__

=head1 NAME 

detour - Command-line interface for FrameNet::WordNet::Detour

=head1 SYNOPSIS

detour [options] synset

 Options:
   -w, --weights  display weights for each frame
   -f, -e         display the frame evoking elements
   -v             run in verbose mode
   -vv            run in debuging mode
   -l, --limited  run in limited mode
   --no-limited   run in unlimited mode
   -c, --cache    run using the cache
   --no-cache     do not use the cache
   --wn PATH      set path to WordNet
   --fn PATH      set path to FrameNet
   -h             show this help

 Synset:
   A specific synset (e.g. 'get#v#1') or all synsets for one 
   lexical unit for one part-of-speech (e.g. 'get#v')

=head1 DESCRIPTION

detour is a small command line script that can be used to pose a query to the detour system. The detour system is a perl module, that can be found on CPAN (FrameNet::WordNet::Detour).

=cut
